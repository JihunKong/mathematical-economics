apiVersion: v1
kind: ConfigMap
metadata:
  name: jwt-secret-generator
  namespace: mathematical-economics
data:
  generate-secret.sh: |
    #!/bin/bash
    # JWT 시크릿 자동 생성 스크립트
    
    # 시크릿이 이미 존재하는지 확인
    if kubectl get secret jwt-secret -n mathematical-economics >/dev/null 2>&1; then
      echo "JWT secret already exists"
      exit 0
    fi
    
    # 새 시크릿 생성
    JWT_SECRET=$(openssl rand -base64 32)
    
    # Kubernetes 시크릿 생성
    kubectl create secret generic jwt-secret \
      --from-literal=JWT_SECRET="$JWT_SECRET" \
      --from-literal=JWT_EXPIRES_IN="7d" \
      --from-literal=REFRESH_TOKEN_EXPIRES_IN="30d" \
      -n mathematical-economics
    
    echo "JWT secret created successfully"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: jwt-secret-generator
  namespace: mathematical-economics
spec:
  template:
    spec:
      serviceAccountName: jwt-secret-manager
      containers:
      - name: secret-generator
        image: bitnami/kubectl:latest
        command: ["/bin/bash", "/scripts/generate-secret.sh"]
        volumeMounts:
        - name: script
          mountPath: /scripts
      volumes:
      - name: script
        configMap:
          name: jwt-secret-generator
          defaultMode: 0755
      restartPolicy: OnFailure

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jwt-secret-manager
  namespace: mathematical-economics

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jwt-secret-manager
  namespace: mathematical-economics
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jwt-secret-manager
  namespace: mathematical-economics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jwt-secret-manager
subjects:
- kind: ServiceAccount
  name: jwt-secret-manager
  namespace: mathematical-economics

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: jwt-secret-rotator
  namespace: mathematical-economics
spec:
  # 매월 1일 자정에 실행 (필요시 주기 조정)
  schedule: "0 0 1 * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: jwt-secret-manager
          containers:
          - name: secret-rotator
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              # 새 시크릿 생성
              NEW_JWT_SECRET=$(openssl rand -base64 32)
              
              # 기존 시크릿 업데이트
              kubectl patch secret jwt-secret -n mathematical-economics \
                --type='json' \
                -p='[{"op": "replace", "path": "/data/JWT_SECRET", "value": "'$(echo -n $NEW_JWT_SECRET | base64)'"}]'
              
              # 관련 deployment 재시작 (rolling update)
              kubectl rollout restart deployment/backend -n mathematical-economics
              
              echo "JWT secret rotated successfully"
          restartPolicy: OnFailure